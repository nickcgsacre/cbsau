let map;
function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 14,
          center: new google.maps.LatLng(-9.974968, -67.808810),
          mapTypeId: 'roadmap'
        });

        let iconBase = './app-assets/images/jvqmap/marker/';
        let icons = {
          ativo: {
            icon: iconBase + 'ico-ativo.png'
          },
          inativo: {
            icon: iconBase + 'ico-inativo.png'
          },
          vencendo: {
            icon: iconBase + 'ico-vencendo.png'
          },
          novo: {
            icon: iconBase + 'ico-novo.png'
          },
          problemas: {
            icon: iconBase + 'ico-problemas.png'
          }
        };
		
		//let features = []
		let infowindow = []
		let companyMarker = []
		
        /*let features = [
          {
            position: new google.maps.LatLng(-9.974968, -67.808810),
            type: 'ativo',
			title: 'Nome do Estabelecimento',
			content: '<strong>Nome do Estabelcimento</strong><br/>Rua fulano de tal, 381 - Centro<br/>Situação: Regularizado'
          }
        ];*/
		
		
		$.post(URL_SISTEMA+"/api/mapa", {acao: "estabelecimentos"}, function(data, status){
			
			let dados = JSON.parse(data);
			let ITENS = dados.ESTABELECIMENTOS
			for(let i in ITENS) {
				
				let address = `${ITENS[i]['endereco']}, ${ITENS[i]['numero']}, ${ITENS[i]['bairro']} - RIO BRANCO - ACRE` 
				let tipo = "ativo"
				
				let geocoder = new google.maps.Geocoder();
				
				geocoder.geocode({'address': address}, function(results, status) {
					
					
					if(results) {
						
						
						infowindow[i] = new google.maps.InfoWindow({
							content: `<strong>${ITENS[i]['nome_fantasia']}</strong> <br/>
									 ${address}<br/>
									 ${ITENS[i]['telefone1']} / ${ITENS[i]['celular1']}<br/>
									 `
						});	
						
						companyMarker[i] = new google.maps.Marker({
							position: results[0].geometry.location,
							icon: icons[tipo].icon,
							title: ITENS[i]['nome_fantasia']
						});	
						
						
						infowindow[i].listener = google.maps.event.addListener(companyMarker[i], 'click', function (e) {
							infowindow[i].open(map,companyMarker[i]);
						});
						
						/*google.maps.event.addListener(companyMarker[i], 'click', function() {
							infowindow[i].open(map,companyMarker[i]);
						});*/
					}
					
					
				})
				
				
			}
			
			setTimeout(function(){ 
				var markerCluster = new MarkerClusterer(map, companyMarker,
            {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
			}, 3000);
		})
		

        /*// Create markers.
        features.forEach(function(feature) {
          let marker = new google.maps.Marker({
            position: feature.position,
            icon: icons[feature.type].icon,
			title: feature.title,
            map: map
          });
		  
		  let infowindow = new google.maps.InfoWindow({
			content: feature.content
		  });
		  
		  marker.addListener('click', function() {
			infowindow.open(map, marker);
		  });
        });*/
      }
	  initMap()